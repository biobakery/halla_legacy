ls
ls()
linspace
range
range(0,10)
sin
sin(10)
pi
sin(pi/2)
seq(1,10)
N = 100
x = seq(-pi, pi, N)
x
x = seq(-pi,pi,length=N)
x
randn
rnormal(0,1)
rn
normal
rgaussian
rnorm
rnorm()
rnorm(10)
scale = 0.1
n1 = rnorm(N)
y = sin(x)
y1 = y+ n1*y*scale
y1
plot(x, y1, 'g')
plot(x,y1)
?plot
plot(x,y1, 'b')
?plot
plot(x,y1, 'l')
scale <- 0.2
plot(x,y1,'l')
scale <- 0.5
plot(x,y1,'l')
scale <- 0.5
y1 = y+ n1*y*scale
plot(x,y1,'l')
x1 <- rnorm(N)
x1 <- rnorm(N)
x2 <- x1^2*(1+rnorm(N)*0.1)
x3 <- x1^3*(1+rnorm(N)*0.1)
?cor
plot(x1,x2,'l')
plot(x1,x2)
cor(x1,x2)
fig()
figure()
subplot
par()
?par
par(mfrow=c(2,2))
plot(x1,x2)
plot(x1,x3)
cor(x1,x2)
cor(x1,x3)
cor(x1,x1)
y1 <- rnorm(N,1,1)
y2 <- y1^2*(1+rnorm(N)*0.1)
y3 <- y1^3*(1+rnorm(N)*0.1)
plot(y1,y2)
plot(y1,y3)
cor(y1,y2)
cor(y1,y3)
library(entropy)
install.packages(entropy)
install.packages("entropy")
library(entropy)
mi
entropy.mi
?mi
mi.empirical(x1,x2)
d1 <- discretize(x1)
d1 <- discretize(x1,10)
d2 <- discretize(x2,10)
d1
d2
mi.empirical(d1,d2)
entropy(d1)
entropy(d2)
DP
d12 <- discretize( x1,x2 )
d12 <- discretize( x1,x2, 10 )
x1
x2
x1.shape
len(x1)
length(x1)
length(x2)
d12 <- discretize(x1, x2, 10, 10)
d12 <- discretize(x1, x2, numBins1 = 10, numBins2 = 10)
d12 <- discretize2d(x1, x2, numBins1 = 10, numBins2 = 10)
d12
H12 <- entropy(d12)
H12
mi.empirical(d12)
H1 <- entropy(rowSums(d12))
H2 <- entropy(colSums(d12))
MI12 <- H1+H2-H12
MI12
cor(x1,x2)
hclust
?hclust
d
?d
hclust(mi.empirical )
hclust(x1)
rnorm(c(3,3))
rnorm(100)
df
?df
dnorm
?dnorm
linkage
dist
dist(x1)
length( dist(x1) )
?choos
?choose
?choose
ncr
choose(100,2)
dist
dist(x1,method="euc")
mi.empirical
dist(x1,method=mi.empirical)
dist(d1,method=mi.empirical)
d1
type(d1)
dcor
install.packages("energy")
library(energy)
matrix?
?matrix
?matrix
matrix(rnorm(10),10,10)
matrix(rnorm(100),10,10)
vec <- c(1,2,3,4,5)
ve
vec
vec.T
t(vec)
vec*vec
vec.*vec
t(vec)*vec
vevc
vec
t(vec)
vec**2
?%*%
?*
?"%*%"
x%*%y
x
y
vec
x %vec% x
vec %*% vec
vec
Map
1+4+9+16+25
t(vec)
some.matrix <-  matrix(rnorm(9), 3,3 )
some.matrix
t(some.matrix)
svd
?svdc
?svd
some.matrix
svd(some.matriX)
svd(some.matriX)
svd(some.matrix)
d,u,v <- svd(some.matrix)
d
c(d,u,v) <- svd(some.matrix)
some.output <- svd(some.matrix)
some.output
some.ouput.d
some.ouput[d]
some.ouput[0]
some.ouput[1]
some.output$d
pca
?pca
??pca
lda
?lda
some.matrix
rm(list=ls())
install.packages("mlbench")
?mlbench
mlbench.ringnorm
library(mlbench)
ringnorm
mlbench.ringnorm
mlbench.ringnorm(100)
x <- mlbench.ringnorm(100)
plot(x)
x[1]
plot(x[1])
x[2]
x[x]$classes
x[1]$classes
x[1]
x[2]$classes
plot(x[1],x[2]$classes)
length(x[2])
x[2][1]
x[2][2]
x[2][3]
x[2][1][1]
x[2]$classes[1]
x[2]$classes[2]
x[2]$classes[0]
x[2]$classes[1]
install.packages("gamlss")
library(gamlss)
?gamlss.dist
dBEZI
BEZI
BEZI.fit
dBEZI.fit
fit
library(mixtools)
install.packages("mixtools")
library(mixtools)
wait = faithful$waiting
wait
?normalmixEM
?mixtools
?gamlss
?glm
source("http://bioconductor.org/biocLite.R")
biocLite()
GEOquery
library(GEOquery)
getGEO("GSE6606")
ls
ls()
x
ls()
wait
readTable
read
read.table
ls
ls()
setwd
setwd("~/hg/cake")
ls()
read.table("GSE10066.pcl")
Y <- read.table("GSE10066.pcl")
Y
?read.table
Y <- read.table("GSE10066.pcl", header=TRUE, sep ="\t")
Y
Y <- read.delim("GSE10066.pcl", header=TRUE, sep ="\t" )
Y
Y[1]
Y[2]
Y[3]
Y[4]
Y[:,1]
Y[,1]
Y[,2]
Y[,3]
Y[,4]
Y[1]
Y[0]
Y[2]
Y[3]
Y[4]
Y[1,]
x
x <- rnorm(100)
x
x[0]
x[1]
x[2]
x[1,]
x <- as.matrix(rnorm(100).10,10)
x <- as.matrix(rnorm(100),10,10)
sx
x
x[1,]
x
?as.matrix
N <- rnorm(100)
N
as.matrix(N,10,10)
x <- as.matrix(N,10,10)
x
length(x)
shape(x)
dim(x)
x <- as.matrix(N,nrow = 10, ncol = 10)
x
dim(x)
x <- matrix(N,nrow = 10, ncol = 10)
x
Y
Y[1,]
data
geo.data <- getGEO("GSE10183")
geo.data
geo.data$GSE10183_series_matrix.txt.gz
?rig
?rigamma
install.packages("psci")
install.packages("pscl")
library(pscl)
zeroinfl
?zeroinfl
?igamma
rigamma(1,1)
rigamma(10,1,1)
u
u <- NULL
u$1 <- 1
u$1
u$1
u$1 <- NULL
u$'1'
u$'a'
as.character(1)
u$as.character(1)
?$
?&$&
?%$%
?"$"
x[1]
u[1]
u[0]
u <- c(u,1)
u
u <- c(u,2)
u
u <- NULL
u
u <- u(c,3)
u <- c(u,3)
u
u <- NULL
source('~/hg/strudel/clust.R')
vec.out
source('~/hg/strudel/clust.R')
vec.out
library(entropy)
matrix(vec.out, 3, 30)
source('~/hg/strudel/clust.R')
write.table( vec.out, file="clust.txt", sep="\t")
?write.table
wd
getwd
getwd()
setwd("/home/ysupmoon/hg/strudel")
source('~/hg/strudel/clust.R')
source('~/hg/halla/R/halla.R')
source('~/hg/halla/R/halla.R')
source('~/hg/halla/R/halla.R')
setwd("~/hg/halla")
source('~/hg/halla/R/halla.R')
setwd("~/hg/halla/R")
source('~/hg/halla/R/halla.R')
source('~/hg/halla/R/halla.R')
source('~/hg/halla/R/halla.R')
require("entropy")
require("energy")
require("combinat")
require("rJava")
require("ggplot2")
require("matrixStats")
## External Dependencies
